{"version":3,"sources":["component/MsgItem.js","component/Msg.js","component/AddMsg.js","component/ChatBox.js","App.js","reportWebVitals.js","index.js"],"names":["MsgItem","msg","neardate","da","dateobj","Date","seconds","Math","floor","interval","sender","className","id","message","createdAt","Msg","props","map","_id","AddMsg","useState","setMsg","onSubmit","event","preventDefault","msgtime","addMsg","alert","type","value","onChange","target","placeholder","ChatBox","getDataFromServer","App","data","setdata","newmsg","length","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e26d361.chunk.js","sourcesContent":["import React from 'react'\n\nexport const MsgItem = ({msg}) => {\n    \n    // function for changing createdat dateformat into times ago\n    const neardate = (da)=>{\n        let dateobj=new Date(da);\n        let seconds = Math.floor((new Date() - dateobj) / 1000);\n        let interval = seconds / 31536000;\n        if (interval > 1) {\n            return Math.floor(interval) + \" years ago\";\n        }\n        interval = seconds / 2592000;\n        if (interval > 1) {\n            return Math.floor(interval) + \" months ago\";\n        }\n        interval = seconds / 86400;\n        if (interval > 1) {\n            return Math.floor(interval) + \" days ago\";\n        }\n        interval = seconds / 3600;\n        if (interval > 1) {\n            return Math.floor(interval) + \" hours ago\";\n        }\n        interval = seconds / 60;\n        if (interval > 1) {\n            return Math.floor(interval) + \" minutes ago\";\n        }\n        return Math.floor(seconds) + \" seconds ago\";\n    }\n\n    return (\n        <div>\n        {\n            // if sender is user then allign msg to right side of scren\n            (msg.sender===\"user\") ? \n            ( <>\n            <p className=\"users\" id=\"user\">{msg.sender}</p>\n            <div className=\"msg\" id=\"right\">\n                <div id=\"pad\">\n                    <h5 id=\"message\">{msg.message}</h5>\n                    <p id=\"time\">{neardate(msg.createdAt)}</p>\n                </div>\n            </div> <br/><br/><br/>\n            </>) :\n            // if sender is agent then align item into left side of screen\n            <> \n            <p className=\"users\" id=\"agent\">{msg.sender}</p>\n            <div className=\"msg\" id=\"msg\">\n            <div id=\"pad\">\n            <h5 id=\"message\">{msg.message}</h5>\n            <p id=\"time\">{neardate(msg.createdAt)}</p>\n            </div>\n        </div>\n        </>\n\n        }\n    </div>\n    );\n}\n","import React from 'react';\nimport {MsgItem} from \"./MsgItem\";\n\nexport const Msg = (props) => {\n    return (\n        <div>\n            {/* mapping data and getting all data by loop */}\n            {props.msg.map((msg)=>{\n                // msgitem compoenent\n                return <MsgItem msg={msg} key={msg._id}/>\n            }\n            )}\n            \n        </div>\n    );\n}\n","import React,{ useState } from 'react';\n\n\nexport const AddMsg = (props) => {\n    // creating varibale for storing usser msg.\n    const [msg,setMsg]=useState(\"\");\n\n    // function call on submit event\n    const submit = (event)=>{\n        event.preventDefault();\n        // if input field is empty show alert box\n        if(!msg)\n        {\n            alert(\"type some msg\");\n        }\n        // calling addMsg function defined in app.js\n        else{\n            // store time of msg send \n            const msgtime=new Date();\n            props.addMsg(msg,msgtime);\n            // clearing input field after sending event\n            setMsg(\"\");\n        }\n    }\n    return (\n        <div className=\"Addmsg\">\n            <form onSubmit={submit}>\n                <input type=\"text\" className=\"forms\" id=\"textinput\" value={msg} onChange={(event)=>\n                    {setMsg(event.target.value)}} placeholder=\"Type a message\"/>\n                <button type=\"submit\" className=\"forms\" id =\"submitbtn\">SEND</button>\n          \n            </form>\n        </div>\n    );\n}\n","import React from 'react'\nimport {Msg} from \"./Msg\";\nimport {AddMsg} from \"./AddMsg\";\n// importing chatbox.css file which contain all css\nimport \"./ChatBox.css\";\n\nexport const ChatBox = (props) => {\n    return (\n        // dividing canvas into 2 part component and typemsg\n        <div className=\"canvas\">\n            {/* container contain all previous msg */}\n            <div className=\"container box\">\n                {/*msg component */}\n            <Msg msg={props.getDataFromServer()}/>\n            </div>\n            {/* typemsg containg input field and submit butttont */}\n            <div className=\"typemsg box\">\n                {/* Add msg component */}\n            <AddMsg addMsg={props.addMsg}/>\n            </div>           \n        </div>\n    );\n}\n","import './App.css';\nimport React,{ useState } from 'react';\nimport {ChatBox} from \"./component/ChatBox\";\n\nfunction App() {\n\n  // addMsg function create a new msg object and add newmsg obj to data \n\n  const addMsg=(msg,msgtime)=>{\n    const newmsg={\n      message:msg,\n      createdAt:msgtime,\n      sender:\"user\",\n      _id:data[data.length-1]._id+1\n    }\n    // adding newmsg object to data\n    setdata([...data,newmsg]);\n\n    // print newmsg object to console\n    console.log(newmsg);\n    // console.log(data)\n  }\n\n  // it return data \n  const getDataFromServer=()=>{\n    return data\n  }\n\n  // data\n  const [data,setdata]=useState([{\n    message: \"Hi user\",\n    createdAt: \"2021-09-14T13:23:02.298Z\",\n    sender: \"agent\",\n    _id: 1,\n  },\n  {\n    message: \"How are you doing today\",\n    createdAt: \"2021-09-14T13:23:02.298Z\",\n    sender: \"user\",\n    _id: 2,\n  },\n  {\n    message: \"I am good, how about you\",\n    createdAt: \"2021-09-14T13:23:02.298Z\",\n    sender: \"agent\",\n    _id: 3,\n  },\n  {\n    message: \"I am good, thanks for asking\",\n    createdAt: \"2021-09-14T13:23:02.298Z\",\n    sender: \"user\",\n    _id: 4,\n  },\n  {\n    message: \"How can I help you today ?\",\n    createdAt: \"2021-09-14T13:23:02.298Z\",\n    sender: \"agent\",\n    _id: 5,\n  }])\n\n\n  return (\n    // chatbox component and passing getdatafromserver and addmsg function to it.\n    <>\n    <ChatBox getDataFromServer={getDataFromServer} addMsg={addMsg}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}